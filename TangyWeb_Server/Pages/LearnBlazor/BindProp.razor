@page "/learnBlazor/bindProp"

<div class="row">
    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Playground</h3><hr />
        <div>
            Active: <input type="checkbox" @bind-value="@product.IsActive" checked="@(product.IsActive?"checked":null)" /> <br />
        </div>
        <div>
            @*Both provide two way data binding*@
            Price (bind-value): <input type="number" @bind-value="@product.Price" @bind-value:event="oninput" /> <br />
            @*Price (bind): <input type="number" @bind="@product.Price" @bind:event="oninput" />*@
        </div>
        <div>
            Product Properties:
            <select @bind="selectedProp">
                @foreach (Demo_ProductProp prop in product.ProductProp)
                {
                    <option value="@prop.Key">@prop.Key</option>
                }
            </select> <br />
        </div>
    </div>
    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Summary</h3><hr />
        Name: @product.Name <br />
        Active: @product.IsActive <br />
        Current Price: @product.Price <br />
        This Product is : @(product.IsActive?"Active":"InActive") <br />
        Propery Selected : @selectedProp <br />
        @if (!String.IsNullOrWhiteSpace(selectedProp))
        {
            <p>Property Value : @product.ProductProp.FirstOrDefault(u=>u.Key == selectedProp).Value</p>
        }
    </div>
</div>





@code {
    private string selectedProp = "";

    Demo_Product product = new()
        {
            Id = 1,
            Name = "Rose Candle",
            IsActive = true,
            Price = 10.99,
            ProductProp = new List<Demo_ProductProp>()
            {
                new Demo_ProductProp {Id = 1, Key = "Color", Value = "Black"},
                new Demo_ProductProp {Id = 2, Key = "Flavor", Value = "Rose Jasmine"},
                new Demo_ProductProp {Id = 3, Key = "Size", Value = "20oz"},
            }
        };

    List<Demo_Product> products = new();

    protected override void OnInitialized()
    {
        products.Add(new()
            {
                Id = 1,
                Name = "Midnight Blaze",
                IsActive = false,
                ProductProp = new()
                {
                    new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Rose" },
                    new Demo_ProductProp { Id = 2, Key = "Size", Value = "20oz" },
                    new Demo_ProductProp { Id = 3, Key = "Color", Value = "Purple" }
                }
            });

        products.Add(new()
            {
                Id = 2,
                Name = "Blossom Lily",
                IsActive = true,
                ProductProp = new()
                {
                    new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                    new Demo_ProductProp { Id = 2, Key = "Size", Value = "18oz" },
                    new Demo_ProductProp { Id = 3, Key = "Color", Value = "White" }
                }
            });
    }
}
